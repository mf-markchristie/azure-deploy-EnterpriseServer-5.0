{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]",
            "metadata": {
                "description": "Region in which the resource group and components will be deployed"
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located including a trailing '/'"
            },
            "defaultValue": "[deployment().properties.templateLink.uri]"
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
            },
            "defaultValue": ""
        },
        "clusterPrefix": {
            "type": "string",
            "defaultValue": "mfes",
            "metadata": {
                "description": "Cluster prefix. Used to generate cluster hostnames. Maximum of 20 characters."
            }
        },
        "addressPrefixes": {
            "type": "string",
            "defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "Address prefix of the new virtual network"
            }
        },
        "managementSubnetName": {
            "type": "string",
            "defaultValue": "managementsubnet",
            "metadata": {
                "description": "Name of the management subnet"
            }
        },
        "managementSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.128.0/20",
            "metadata": {
                "description": "CIDR used for the management subnet - needs to be a subset of the addressPrefix"
            }
        },
        "applicationSubnetName": {
            "type": "string",
            "defaultValue": "applicationsubnet",
            "metadata": {
                "description": "Name of the application subnet"
            }
        },
        "applicationSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.144.0/20",
            "metadata": {
                "description": "CIDR used for the application subnet - needs to be a subset of the addressPrefix"
            }
        },
        "adSubnetName": {
            "type": "string",
            "defaultValue": "adsubnet",
            "metadata": {
                "description": "Name of the AD subnet"
            }
        },
        "adSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.0.0/19",
            "metadata": {
                "description": "CIDR used for the AD subnet - needs to be a subset of the addressPrefix"
            }
        },
        "dataSubnetName": {
            "type": "string",
            "defaultValue": "datasubnet",
            "metadata": {
                "description": "Name of the data subnet"
            }
        },
        "dataSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.32.0/19",
            "metadata": {
                "description": "CIDR used for the data subnet - needs to be a subset of the addressPrefix"
            }
        },
        "redisSubnetName": {
            "type": "string",
            "defaultValue": "redissubnet",
            "metadata": {
                "description": "Name of the Redis subnet"
            }
        },
        "redisSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.0.64.0/19",
            "metadata": {
                "description": "CIDR used for the Redis subnet - needs to be a subset of the addressPrefix"
            }
        },
        "esInstanceCount": {
            "type": "int",
            "defaultValue": 2,
            "minValue": 1,
            "maxValue": 9,
            "metadata": {
                "description": "The number of enterprise server hosting nodes to deploy."
            }
        },
        "esInstanceSize": {
            "type": "string",
            "defaultValue": "Standard_E2s_v3",
            "metadata": {
                "description": "VM size for ES nodes"
            }
        },
        "esDataDiskSize": {
            "type": "int",
            "defaultValue": 32,
            "metadata": {
                "description": "Size of Datadisk in GB for ES hosting VMs."
            }
        },
        "rdgInstanceCount": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 0,
            "maxValue": 4,
            "metadata": {
                "description": "Number of Remote Desktop Gateway nodes"
            }
        },
        "rdgInstanceSize": {
            "type": "string",
            "defaultValue": "Standard_E2s_v3",
            "metadata": {
                "description": "VM size for RDG nodes"
            }
        },
        "esLicense": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Location of license key file for Enterprise Server."
            }
        },
        "adInstanceSize": {
            "type": "string",
            "defaultValue": "Standard_E2s_v3",
            "metadata": {
                "description": "VM size for AD nodes"
            }
        },
        "domainDNSName": {
            "type": "string",
            "metadata": {
                "description": "The fully qualified domain name (FQDN), e.g., example.com. Must be 2-255 characters."
            }
        },
        "administratorUserName": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Machine and domain administrator username."
            }
        },
        "administratorPassword": {
            "type": "securestring",
            "minLength": 5,
            "metadata": {
                "description": "The password for the machine and domain administrator account."
            }
        },
        "primaryAdIpAddress": {
            "type": "string",
            "defaultValue": "10.0.0.10",
            "metadata": {
                "description": "IP Address of primary DC."
            }
        },
        "backupAdIpAddress": {
            "type": "string",
            "defaultValue": "10.0.0.20",
            "metadata": {
                "description": "IP Address of backup DC."
            }
        },
        "applicationUsername": {
            "type": "string",
            "minLength": 1,
            "defaultValue": "mfservice",
            "metadata": {
                "description": "Administrator username for service account user."
            }
        },
        "applicationUserPassword": {
            "type": "securestring",
            "minLength": 5,
            "metadata": {
                "description": "Password for service account user."
            }
        },
        "esNodeIpArray": {
            "type": "array",
            "defaultValue": [
                "10.0.144.10",
                "10.0.144.20",
                "10.0.144.30",
                "10.0.144.40",
                "10.0.144.50",
                "10.0.144.60",
                "10.0.144.70",
                "10.0.144.80",
                "10.0.144.90"
            ]
        },
        "escwaNodeIp": {
            "type": "string",
            "defaultValue": "10.0.128.4",
            "metadata": {
                "description": "Ip address of ESCWA node."
            }
        },
        "deployFsDemo": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether fileshare demo is deployed"
            }
        },
        "fsNodeIp": {
            "type": "string",
            "defaultValue": "10.0.32.10",
            "metadata": {
                "description": "Ip address of fileshare node."
            }
        },
        "redisIp": {
            "type": "string",
            "defaultValue": "10.0.64.10",
            "metadata": {
                "description": "Ip address of Redis cache."
            }
        },
        "fsviewPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Password for fileshare administrative user."
            }
        },
        "fsPort": {
            "type": "int",
            "defaultValue": 3000,
            "minValue": 1,
            "maxValue": 65535,
            "metadata": {
                "description": "TCP port for fileshare listener."
            }
        },
        "fsInstanceSize": {
            "type": "string",
            "defaultValue": "Standard_E2s_v3",
            "metadata": {
                "description": "VM size for FS node"
            }
        },
        "fsDataDiskSize": {
            "type": "int",
            "defaultValue": 32,
            "metadata": {
                "description": "Size of Datadisk in GB for FS hosting VMs."
            }
        },
        "deployPacDemo": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether PAC demo is deployed"
            }
        },
        "deployDbDemo": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether database demo is deployed"
            }
        },
        "sqlWitnessInstanceSize": {
            "type": "string",
            "defaultValue": "Standard_E2s_v3",
            "metadata": {
                "description": "VM size for SQL Witness"
            }
        },
        "sqlSlaveInstanceSize": {
            "type": "string",
            "defaultValue": "Standard_E2s_v3",
            "metadata": {
                "description": "VM size for SQL Slave"
            }
        },
        "sqlLBIPAddress": {
            "type": "string",
            "defaultValue": "10.0.32.30",
            "metadata": {
                "description": "Ip address for SQL Load Balancer"
            }
        },
        "sqlNodeIpArray": {
            "type": "array",
            "defaultValue": [
                "10.0.32.31",
                "10.0.32.32",
                "10.0.32.33"
            ]
        },
        "deployLinux": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "Flag to determine whether linux VMs are deployed for ES."
            }
        },
        "sshKey": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "SSH key for Linux machine."
            }
        }
    },
    "variables": {
        "clusterPrefixLower": "[toLower(parameters('clusterPrefix'))]",
        "managementNsgName": "[concat(variables('clusterPrefixLower'), '-mNsg')]",
        "applicationNsgName": "[concat(variables('clusterPrefixLower'), '-aNsg')]",
        "adNsgName": "[concat(variables('clusterPrefixLower'), '-adNsg')]",
        "dataNsgName": "[concat(variables('clusterPrefixLower'), '-dNsg')]",
        "redisNsgName": "[concat(variables('clusterPrefixLower'), '-rNsg')]",
        "virtualNetworkName": "[concat(variables('clusterPrefixLower'), '-vnet')]",
        "managementSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), parameters('managementSubnetName'))]",
        "applicationSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), parameters('applicationSubnetName'))]",
        "adSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), parameters('adSubnetName'))]",
        "dataSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), parameters('dataSubnetName'))]",
        "redisSubnetRef": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('virtualNetworkName'), parameters('redisSubnetName'))]",
        "rdgHostname": "[concat(variables('clusterPrefixLower'), '-rdg')]",
        "esHostname": "[concat(variables('clusterPrefixLower'), '-es')]",
        "adHostname": "[concat(variables('clusterPrefixLower'), '-ad')]",
        "fsHostname": "[concat(variables('clusterPrefixLower'), '-fs')]",
        "sqlLBName": "[concat(variables('clusterPrefixLower'), '-sqlLB')]",
        "escwaHostname": "[concat(variables('clusterPrefixLower'), '-esadmin')]",
        "diagStorageAccount": "[concat(variables('clusterPrefixLower'), uniqueString(concat(resourceGroup().id, 'dsa')))]",
        "esAvailabilitySetName": "[concat(variables('esHostname'), '-as')]",
        "rdgAvailabilitySetName": "[concat(variables('rdgHostname'), '-as')]",
        "adAvailabilitySetName": "[concat(variables('adHostname'), '-as')]",
        "rdgDeploymentTemplateUrl": "[uri(parameters('_artifactsLocation'), concat('templates/rdgDeploy.json', parameters('_artifactsLocationSasToken')))]",
        "esDeploymentTemplateUrl": "[uri(parameters('_artifactsLocation'), concat('templates/esDeploy.json', parameters('_artifactsLocationSasToken')))]",
        "adPhase1TemplateUrl": "[uri(parameters('_artifactsLocation'), concat('templates/adPhase1.json', parameters('_artifactsLocationSasToken')))]",
        "adPhase2TemplateUrl": "[uri(parameters('_artifactsLocation'), concat('templates/adPhase2.json', parameters('_artifactsLocationSasToken')))]",
        "sqlPhase1TemplateUrl": "[uri(parameters('_artifactsLocation'), concat('templates/sqlPhase1.json', parameters('_artifactsLocationSasToken')))]",
        "sqlPhase2TemplateUrl": "[uri(parameters('_artifactsLocation'), concat('templates/sqlPhase2.json', parameters('_artifactsLocationSasToken')))]",
        "esConfigureNodeUrl": "[uri(parameters('_artifactsLocation'), concat('templates/esNodeConfig.json', parameters('_artifactsLocationSasToken')))]",
        "escwaConfigureNodeUrl": "[uri(parameters('_artifactsLocation'), concat('templates/escwaNodeConfig.json', parameters('_artifactsLocationSasToken')))]",
        "fsConfigureNodeUrl": "[uri(parameters('_artifactsLocation'), concat('templates/fsNodeConfig.json', parameters('_artifactsLocationSasToken')))]",
        "resetNicUrl": "[uri(parameters('_artifactsLocation'), concat('templates/resetNic.json', parameters('_artifactsLocationSasToken')))]",
        "joinDomainUrl": "[uri(parameters('_artifactsLocation'), concat('templates/joinDomain.json', parameters('_artifactsLocationSasToken')))]",
        "deployDatabase": "[or(parameters('deployDbDemo'), parameters('deployPacDemo'))]",
        "deployEsLb": "[or(parameters('deployDbDemo'), parameters('deployPacDemo'), parameters('deployFsDemo'))]",
        "esLbName": "[concat(parameters('clusterPrefix'), '-eslb')]",
        "esLBBERef": "[resourceId('Microsoft.Network/loadBalancers/backendAddressPools', variables('esLbName'), 'esLBBE')]",
        "esLBFERef": "[resourceId('Microsoft.Network/loadBalancers/frontendIPConfigurations', variables('esLbName'), 'esLBFE')]",
        "domainJoinOptions": 3,
        "redisCacheNameShort": "[concat(variables('clusterPrefixLower'), '-redis')]",
        "redisCacheName": "[concat(variables('redisCacheNameShort'), uniqueString(concat(resourceGroup().id, 'redis')))]",
        "redisCacheSKU": "Premium",
        "redisCacheFamily": "P",
        "redisCacheCapacity": 1,
        "mfdsPort": "[if(parameters('deployLinux'), '1086', '86')]",
        "addressSpace": {
            "addressPrefixes": [
                "[parameters('addressPrefixes')]"
            ]
        },
        "baseSubnetArr": [{
            "name": "[parameters('managementSubnetName')]",
            "properties": {
                "addressPrefix": "[parameters('managementSubnetPrefix')]",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('managementNsgName'))]"
                }
            }
        }, {
            "name": "[parameters('applicationSubnetName')]",
            "properties": {
                "addressPrefix": "[parameters('applicationSubnetPrefix')]",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('applicationNsgName'))]"
                }
            }
        }, {
            "name": "[parameters('adSubnetName')]",
            "properties": {
                "addressPrefix": "[parameters('adSubnetPrefix')]",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('adNsgName'))]"
                }
            }
        }],
        "dataSubnetArr": [{
            "name": "[parameters('dataSubnetName')]",
            "properties": {
                "addressPrefix": "[parameters('dataSubnetPrefix')]",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('dataNsgName'))]"
                }
            }
        }],
        "redisSubnetArr": [{
            "name": "[parameters('redisSubnetName')]",
            "properties": {
                "addressPrefix": "[parameters('redisSubnetPrefix')]",
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('redisNsgName'))]"
                }
            }
        }],
        "subnets": "[concat(variables('baseSubnetArr'), if(variables('deployEsLb'), variables('dataSubnetArr'), json('[]')), if(parameters('deployPacDemo'), variables('redisSubnetArr'), json('[]')))]",
        "dnsSettings": {
            "dnsServers": [
                "[parameters('primaryAdIpAddress')]",
                "[parameters('backupAdIpAddress')]"
            ]
        },
        "domainJoinProperties": {
            "publisher": "Microsoft.Compute",
            "type": "JsonADDomainExtension",
            "typeHandlerVersion": "1.3",
            "autoUpgradeMinorVersion": true,
            "settings": {
                "Name": "[parameters('domainDNSName')]",
                "User": "[concat(parameters('domainDNSName'), '\\', parameters('administratorUserName'))]",
                "Restart": "true",
                "Options": "[variables('domainJoinOptions')]"
            },
            "protectedSettings": {
                "Password": "[parameters('administratorPassword')]"
            }
        }
    },
    "resources": [
        {
            "apiVersion": "2019-10-01",
            "name": "pid-cb0733ef-f8de-45a4-8870-2b9723d636d8-partnercenter",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "resources": []
                }
            }
        },
        {
            "apiVersion": "2019-12-01",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('esAvailabilitySetName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 5
            }
        },
        {
            "apiVersion": "2019-12-01",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('rdgAvailabilitySetName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 5
            }
        },
        {
            "apiVersion": "2019-12-01",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('adAvailabilitySetName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Aligned"
            },
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 5
            }
        },
        {
            "apiVersion": "2019-11-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('applicationNsgName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "RDP_Gateway",
                        "properties": {
                            "description": "Allow RDP traffic from management subnet",
                            "priority": 300,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('managementSubnetPrefix')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "3389"
                        }
                    },
                    {
                        "name": "RDP_NonGateway",
                        "properties": {
                            "description": "Deny RDP traffic from anywhere outside management subnet",
                            "priority": 310,
                            "protocol": "Tcp",
                            "access": "Deny",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "3389"
                        }
                    },
                    {
                        "name": "domainController_inbound",
                        "properties": {
                            "description": "Allow all traffic from domain controller subnet",
                            "priority": 320,
                            "protocol": "*",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('adSubnetPrefix')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "*"
                        }
                    },
                    {
                        "name": "SSH_Gateway",
                        "properties": {
                            "description": "Allow SSH traffic from management subnet",
                            "priority": 330,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('managementSubnetPrefix')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22"
                        }
                    },
                    {
                        "name": "SSH_NonGateway",
                        "properties": {
                            "description": "Deny SSH traffic from anywhere outside management subnet",
                            "priority": 340,
                            "protocol": "Tcp",
                            "access": "Deny",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22"
                        }
                    },
                    {
                        "name": "tn3270_inbound",
                        "properties": {
                            "description": "Allow 3270 traffic inbound",
                            "priority": 500,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "5555-5557"
                        }
                    },
                    {
                        "name": "escwa_mfds_inbound",
                        "properties": {
                            "description": "Allow access to mfds port for ESCWA",
                            "priority": 510,
                            "protocol": "*",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('escwaNodeIp')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "[variables('mfdsPort')]"
                        }
                    },
                    {
                        "name": "escwa_webservices_inbound",
                        "properties": {
                            "description": "Allow access to web services ports for ESCWA",
                            "priority": 520,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('escwaNodeIp')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "5558-5560"
                        }
                    },
                    {
                        "name": "denymanagement_inbound",
                        "properties": {
                            "description": "Deny all other traffic from management subnet",
                            "priority": 700,
                            "protocol": "*",
                            "access": "Deny",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('managementSubnetPrefix')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "*"
                        }
                    },
                    {
                        "name": "denydata_inbound",
                        "properties": {
                            "description": "Deny all other traffic from management subnet",
                            "priority": 710,
                            "protocol": "*",
                            "access": "Deny",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('dataSubnetPrefix')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "*"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2019-11-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('managementNsgName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "RDP",
                        "properties": {
                            "description": "Allow RDP traffic from all locations",
                            "priority": 300,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "3389"
                        }
                    },
                    {
                        "name": "escwa_inbound",
                        "properties": {
                            "description": "Allow traffic to escwa port",
                            "priority": 310,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('applicationSubnetPrefix')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "10086"
                        }
                    },
                    {
                        "name": "denyapplication_inbound",
                        "properties": {
                            "description": "Deny all other traffic from application subnet",
                            "priority": 700,
                            "protocol": "*",
                            "access": "Deny",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('applicationSubnetPrefix')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "*"
                        }
                    },
                    {
                        "name": "denydata_inbound",
                        "properties": {
                            "description": "Deny all other traffic from data subnet",
                            "priority": 710,
                            "protocol": "*",
                            "access": "Deny",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('dataSubnetPrefix')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "*"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2019-11-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('adNsgName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "RDP_Gateway",
                        "properties": {
                            "description": "Allow RDP traffic from management subnet",
                            "priority": 300,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('managementSubnetPrefix')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "3389"
                        }
                    },
                    {
                        "name": "RDP_NonGateway",
                        "properties": {
                            "description": "Deny RDP traffic from anywhere outside management subnet",
                            "priority": 310,
                            "protocol": "Tcp",
                            "access": "Deny",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "3389"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2019-11-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('dataNsgName')]",
            "location": "[parameters('location')]",
            "condition": "[variables('deployEsLb')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "RDP_Gateway",
                        "properties": {
                            "description": "Allow RDP traffic from management subnet",
                            "priority": 300,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('managementSubnetPrefix')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "3389"
                        }
                    },
                    {
                        "name": "RDP_NonGateway",
                        "properties": {
                            "description": "Deny RDP traffic from anywhere outside management subnet",
                            "priority": 310,
                            "protocol": "Tcp",
                            "access": "Deny",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "3389"
                        }
                    },
                    {
                        "name": "domainController_inbound",
                        "properties": {
                            "description": "Allow all traffic from domain controller subnet",
                            "priority": 320,
                            "protocol": "*",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('adSubnetPrefix')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "*"
                        }
                    },
                    {
                        "name": "SSH_Gateway",
                        "properties": {
                            "description": "Allow SSH traffic from management subnet",
                            "priority": 330,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('managementSubnetPrefix')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22"
                        }
                    },
                    {
                        "name": "SSH_NonGateway",
                        "properties": {
                            "description": "Deny SSH traffic from anywhere outside management subnet",
                            "priority": 340,
                            "protocol": "Tcp",
                            "access": "Deny",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "22"
                        }
                    },
                    {
                        "name": "escwa_inbound",
                        "properties": {
                            "description": "Allow access to mfds port for ESCWA",
                            "priority": 500,
                            "protocol": "*",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('escwaNodeIp')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "[variables('mfdsPort')]"
                        }
                    },
                    {
                        "name": "fileshare_inbound",
                        "properties": {
                            "description": "Allow access to fileshare from application subnet",
                            "priority": 510,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('applicationSubnetPrefix')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "[parameters('fsPort')]"
                        }
                    },
                    {
                        "name": "odbc_inbound",
                        "properties": {
                            "description": "Allow access to odbc listener from application subnet",
                            "priority": 520,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('applicationSubnetPrefix')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "1433"
                        }
                    },
                    {
                        "name": "aoendpoint_inbound",
                        "properties": {
                            "description": "Allow access to alwaysOn endpoint from application subnet",
                            "priority": 530,
                            "protocol": "Tcp",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('applicationSubnetPrefix')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "59999"
                        }
                    },
                    {
                        "name": "networkdrive_inbound",
                        "properties": {
                            "description": "Allow access to network drive from application subnet",
                            "priority": 540,
                            "protocol": "*",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('applicationSubnetPrefix')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "137-139"
                        }
                    },
                    {
                        "name": "networkdrive_inbound2",
                        "properties": {
                            "description": "Allow access to network drive from application subnet",
                            "priority": 541,
                            "protocol": "*",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('applicationSubnetPrefix')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "445"
                        }
                    },
                    {
                        "name": "networkdrive_inbound3",
                        "properties": {
                            "description": "Allow access to network drive from application subnet",
                            "priority": 542,
                            "protocol": "*",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('applicationSubnetPrefix')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "2049"
                        }
                    },
                    {
                        "name": "networkdrive_inbound4",
                        "properties": {
                            "description": "Allow access to network drive from application subnet",
                            "priority": 543,
                            "protocol": "*",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('applicationSubnetPrefix')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "111"
                        }
                    },
                    {
                        "name": "mfds_inbound",
                        "properties": {
                            "description": "Allow access to mfds port from application subnet",
                            "priority": 560,
                            "protocol": "*",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('applicationSubnetPrefix')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "[variables('mfdsPort')]"
                        }
                    },
                    {
                        "name": "denymanagement_inbound",
                        "properties": {
                            "description": "Deny all other traffic from management subnet",
                            "priority": 700,
                            "protocol": "*",
                            "access": "Deny",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('managementSubnetPrefix')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "*"
                        }
                    },
                    {
                        "name": "denyapplication_inbound",
                        "properties": {
                            "description": "Deny all other traffic from management subnet",
                            "priority": 710,
                            "protocol": "*",
                            "access": "Deny",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('applicationSubnetPrefix')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "*"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2019-11-01",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('redisNsgName')]",
            "location": "[parameters('location')]",
            "condition": "[parameters('deployPacDemo')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "redisendpoint_inbound",
                        "properties": {
                            "description": "Allow all traffic to redis port",
                            "priority": 500,
                            "protocol": "*",
                            "access": "Allow",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('addressPrefixes')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "6379"
                        }
                    },
                    {
                        "name": "denymanagement_inbound",
                        "properties": {
                            "description": "Deny all other traffic from management subnet",
                            "priority": 700,
                            "protocol": "*",
                            "access": "Deny",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('managementSubnetPrefix')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "*"
                        }
                    },
                    {
                        "name": "denyapplication_inbound",
                        "properties": {
                            "description": "Deny all other traffic from management subnet",
                            "priority": 710,
                            "protocol": "*",
                            "access": "Deny",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('applicationSubnetPrefix')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "*"
                        }
                    },
                    {
                        "name": "denydata_inbound",
                        "properties": {
                            "description": "Deny all other traffic from data subnet",
                            "priority": 720,
                            "protocol": "*",
                            "access": "Deny",
                            "direction": "Inbound",
                            "sourceAddressPrefix": "[parameters('dataSubnetPrefix')]",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "destinationPortRange": "*"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2019-11-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('managementNsgName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('applicationNsgName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('adNsgName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('dataNsgName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('redisNsgName'))]"
            ],
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": "[variables('addressSpace')]",
                "subnets": "[variables('subnets')]"
            }
        },
        {
            "apiVersion": "2019-06-01",
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('diagStorageAccount')]",
            "location": "[parameters('location')]",
            "kind": "Storage",
            "sku": {
                "name": "Standard_LRS"
            }
        },
        {
            "condition": "[parameters('deployPacDemo')]",
            "apiVersion": "2019-07-01",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "type": "Microsoft.Cache/Redis",
            "name": "[variables('redisCacheName')]",
            "location": "[parameters('location')]",
            "properties": {
                "enableNonSslPort": true,
                "sku": {
                    "capacity": "[variables('redisCacheCapacity')]",
                    "family": "[variables('redisCacheFamily')]",
                    "name": "[variables('redisCacheSKU')]"
                },
                "subnetId": "[variables('redisSubnetRef')]",
                "staticIP": "[parameters('redisIp')]"
            }
        },
        {
            "condition": "[variables('deployEsLb')]",
            "apiVersion": "2019-11-01",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('esLbName'), '-publicip')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "Static",
                "dnsSettings": {
                    "domainNameLabel": "[concat(variables('esLbName'), '-dns', uniqueString(resourceGroup().id))]"
                }
            }
        },
        {
            "condition": "[variables('deployEsLb')]",
            "apiVersion": "2019-11-01",
            "name": "[variables('esLbName')]",
            "type": "Microsoft.Network/loadBalancers",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('esLbName'), '-publicip'))]"
            ],
            "properties": {
                "frontendIPConfigurations": [
                    {
                        "name": "esLBFE",
                        "properties": {
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('esLbName'), '-publicip'))]"
                            }
                        }
                    }
                ],
                "backendAddressPools": [{
                    "name": "esLBBE"
                }],
                "loadBalancingRules": [
                    {
                        "name": "fsRule",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('esLBBERef')]"
                            },
                            "frontendIPConfiguration": {
                                "id": "[variables('esLBFERef')]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('esLbName'), 'fsProbe')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 5555,
                            "backendPort": 5555,
                            "enableFloatingIP": false,
                            "loadDistribution": "SourceIP"
                        }
                    }, {
                        "name": "sqlRule",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('esLBBERef')]"
                            },
                            "frontendIPConfiguration": {
                                "id": "[variables('esLBFERef')]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('esLbName'), 'sqlProbe')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 5556,
                            "backendPort": 5556,
                            "enableFloatingIP": false,
                            "loadDistribution": "SourceIP"
                        }
                    }, {
                        "name": "pacRule",
                        "properties": {
                            "backendAddressPool": {
                                "id": "[variables('esLBBERef')]"
                            },
                            "frontendIPConfiguration": {
                                "id": "[variables('esLBFERef')]"
                            },
                            "probe": {
                                "id": "[resourceId('Microsoft.Network/loadBalancers/probes', variables('esLbName'), 'pacProbe')]"
                            },
                            "protocol": "Tcp",
                            "frontendPort": 5557,
                            "backendPort": 5557,
                            "enableFloatingIP": false,
                            "loadDistribution": "SourceIP"
                        }
                    }
                ],
                "probes": [{
                        "name": "fsProbe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 5555,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }, {
                        "name": "sqlProbe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 5556,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }, {
                        "name": "pacProbe",
                        "properties": {
                            "protocol": "Tcp",
                            "port": 5557,
                            "intervalInSeconds": 5,
                            "numberOfProbes": 2
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2019-09-01",
            "type": "Microsoft.Resources/deployments",
            "name": "[esdeploy.getLoopName('createEsNode', copyIndex())]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('diagStorageAccount'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
                "[resourceId('Microsoft.Compute/availabilitySets', variables('esAvailabilitySetName'))]"
            ],
            "copy": {
                "name": "createEsNodeLoop",
                "count": "[parameters('esInstanceCount')]"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('esDeploymentTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "hostName": {
                        "value": "[esdeploy.getLoopName(variables('esHostname'), copyIndex())]"
                    },
                    "virtualMachineSize": {
                        "value": "[parameters('esInstanceSize')]"
                    },
                    "dataDiskSize": {
                        "value": "[parameters('esDataDiskSize')]"
                    },
                    "diagStorageAccount": {
                        "value": "[variables('diagStorageAccount')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('administratorUserName')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('administratorPassword')]"
                    },
                    "subnetRef": {
                        "value": "[variables('applicationSubnetRef')]"
                    },
                    "availabilitySetName": {
                        "value": "[variables('esAvailabilitySetName')]"
                    },
                    "esLicense": {
                        "value": "[parameters('esLicense')]"
                    },
                    "deployLinux": {
                        "value": "[parameters('deployLinux')]"
                    },
                    "sshKey": {
                        "value": "[parameters('sshKey')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2019-09-01",
            "type": "Microsoft.Resources/deployments",
            "name": "[esdeploy.getLoopName('rdgDeployment', copyIndex())]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('diagStorageAccount'))]",
                "[resourceId('Microsoft.Compute/availabilitySets', variables('rdgAvailabilitySetName'))]"
            ],
            "copy": {
                "name": "rdgVmLoop",
                "count": "[parameters('rdgInstanceCount')]"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('rdgDeploymentTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "hostName": {
                        "value": "[esdeploy.getLoopName(variables('rdgHostname'), copyIndex())]"
                    },
                    "virtualMachineSize": {
                        "value": "[parameters('rdgInstanceSize')]"
                    },
                    "diagStorageAccount": {
                        "value": "[variables('diagStorageAccount')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('administratorUserName')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('administratorPassword')]"
                    },
                    "subnetRef": {
                        "value": "[variables('managementSubnetRef')]"
                    },
                    "availabilitySetName": {
                        "value": "[variables('rdgAvailabilitySetName')]"
                    },
                    "escwaHostname": {
                        "value": "[variables('escwaHostname')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2019-09-01",
            "type": "Microsoft.Resources/deployments",
            "name": "createEscwaNode",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('diagStorageAccount'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('esDeploymentTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "hostName": {
                        "value": "[variables('escwaHostname')]"
                    },
                    "virtualMachineSize": {
                        "value": "[parameters('rdgInstanceSize')]"
                    },
                    "dataDiskSize": {
                        "value": 0
                    },
                    "diagStorageAccount": {
                        "value": "[variables('diagStorageAccount')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('administratorUserName')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('administratorPassword')]"
                    },
                    "subnetRef": {
                        "value": "[variables('managementSubnetRef')]"
                    },
                    "esLicense": {
                        "value": "[parameters('esLicense')]"
                    },
                    "deployLinux": {
                        "value": "[parameters('deployLinux')]"
                    },
                    "sshKey": {
                        "value": "[parameters('sshKey')]"
                    }
                }
            }
        },
        {
            "condition": "[parameters('deployFsDemo')]",
            "apiVersion": "2019-09-01",
            "type": "Microsoft.Resources/deployments",
            "name": "createFsNode",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('diagStorageAccount'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('esDeploymentTemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "hostName": {
                        "value": "[variables('fsHostname')]"
                    },
                    "virtualMachineSize": {
                        "value": "[parameters('fsInstanceSize')]"
                    },
                    "dataDiskSize": {
                        "value": "[parameters('fsDataDiskSize')]"
                    },
                    "diagStorageAccount": {
                        "value": "[variables('diagStorageAccount')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('administratorUserName')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('administratorPassword')]"
                    },
                    "subnetRef": {
                        "value": "[variables('dataSubnetRef')]"
                    },
                    "esLicense": {
                        "value": "[parameters('esLicense')]"
                    },
                    "deployLinux": {
                        "value": "[parameters('deployLinux')]"
                    },
                    "sshKey": {
                        "value": "[parameters('sshKey')]"
                    }
                }
            }
        },
        {
            "condition": "[variables('deployDatabase')]",
            "apiVersion": "2019-09-01",
            "type": "Microsoft.Resources/deployments",
            "name": "sqlPhase1",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', variables('diagStorageAccount'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('sqlPhase1TemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "clusterPrefix": {
                        "value": "[variables('clusterPrefixLower')]"
                    },
                    "diagStorageAccount": {
                        "value": "[variables('diagStorageAccount')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('administratorUserName')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('administratorPassword')]"
                    },
                    "witnessInstanceSize": {
                        "value": "[parameters('sqlWitnessInstanceSize')]"
                    },
                    "slaveInstanceSize": {
                        "value": "[parameters('sqlSlaveInstanceSize')]"
                    },
                    "subnetRef": {
                        "value": "[variables('dataSubnetRef')]"
                    },
                    "sqlLBIPAddress": {
                        "value": "[parameters('sqlLBIPAddress')]"
                    },
                    "sqlLBName": {
                        "value": "[variables('sqlLBName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2019-09-01",
            "type": "Microsoft.Resources/deployments",
            "name": "adPhase1",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
                "[resourceId('Microsoft.Storage/storageAccounts', variables('diagStorageAccount'))]",
                "[resourceId('Microsoft.Compute/availabilitySets', variables('adAvailabilitySetName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('adPhase1TemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "hostName": {
                        "value": "[variables('adHostname')]"
                    },
                    "virtualMachineSize": {
                        "value": "[parameters('adInstanceSize')]"
                    },
                    "diagStorageAccount": {
                        "value": "[variables('diagStorageAccount')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('administratorUserName')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('administratorPassword')]"
                    },
                    "subnetRef": {
                        "value": "[variables('adSubnetRef')]"
                    },
                    "availabilitySetName": {
                        "value": "[variables('adAvailabilitySetName')]"
                    },
                    "domainName": {
                        "value": "[parameters('domainDNSName')]"
                    },
                    "virtualNetworkName": {
                        "value": "[variables('virtualNetworkName')]"
                    },
                    "addressSpace": {
                        "value": "[variables('addressSpace')]"
                    },
                    "subnets": {
                        "value": "[variables('subnets')]"
                    },
                    "primaryAdIpAddress": {
                        "value": "[parameters('primaryAdIpAddress')]"
                    },
                    "backupAdIpAddress": {
                        "value": "[parameters('backupAdIpAddress')]"
                    },
                    "applicationUsername": {
                        "value": "[parameters('applicationUsername')]"
                    },
                    "applicationUserPassword": {
                        "value": "[parameters('applicationUserPassword')]"
                    },
                    "loadBalancerName": {
                        "value": "[variables('sqlLBName')]"
                    },
                    "loadBalancerIp": {
                        "value": "[parameters('sqlLBIPAddress')]"
                    },
                    "redisCacheName": {
                        "value": "[variables('redisCacheNameShort')]"
                    },
                    "redisIp": {
                        "value": "[parameters('redisIp')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2019-09-01",
            "type": "Microsoft.Resources/deployments",
            "name": "adPhase2",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'adPhase1')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('adPhase2TemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "hostName": {
                        "value": "[variables('adHostname')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('administratorUserName')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('administratorPassword')]"
                    },
                    "subnetRef": {
                        "value": "[variables('adSubnetRef')]"
                    },
                    "domainName": {
                        "value": "[parameters('domainDNSName')]"
                    },
                    "virtualNetworkName": {
                        "value": "[variables('virtualNetworkName')]"
                    },
                    "addressSpace": {
                        "value": "[variables('addressSpace')]"
                    },
                    "subnets": {
                        "value": "[variables('subnets')]"
                    },
                    "primaryAdIpAddress": {
                        "value": "[parameters('primaryAdIpAddress')]"
                    },
                    "backupAdIpAddress": {
                        "value": "[parameters('backupAdIpAddress')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2019-09-01",
            "type": "Microsoft.Resources/deployments",
            "name": "[esdeploy.getLoopName('resetEsNodeNic', copyIndex())]",
            "dependsOn": [
                "createEsNodeLoop",
                "[resourceId('Microsoft.Resources/deployments', 'adPhase2')]",
                "[resourceId('Microsoft.Network/loadBalancers', variables('esLbName'))]"
            ],
            "copy": {
                "name": "resetEsNodeNicLoop",
                "count": "[parameters('esInstanceCount')]"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('resetNicUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "hostName": {
                        "value": "[esdeploy.getLoopName(variables('esHostname'), copyIndex())]"
                    },
                    "subnetRef": {
                        "value": "[variables('applicationSubnetRef')]"
                    },
                    "dnsSettings": {
                        "value": "[variables('dnsSettings')]"
                    },
                    "ipAddress": {
                        "value": "[parameters('esNodeIpArray')[copyIndex()]]"
                    }
                }
            }
        },
        {
            "apiVersion": "2019-09-01",
            "type": "Microsoft.Resources/deployments",
            "name": "[esdeploy.getLoopName('joinDomainEs', copyIndex())]",
            "dependsOn": [
                "resetEsNodeNicLoop"
            ],
            "copy": {
                "name": "joinDomainEsNodeLoop",
                "count": "[parameters('esInstanceCount')]"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('joinDomainUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "hostName": {
                        "value": "[esdeploy.getLoopName(variables('esHostname'), copyIndex())]"
                    },
                    "domainJoinProperties": {
                        "value": "[variables('domainJoinProperties')]"
                    },
                    "deployLinux": {
                        "value": "[parameters('deployLinux')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2019-09-01",
            "type": "Microsoft.Resources/deployments",
            "name": "resetEscwaNodeNic",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'createEscwaNode')]",
                "[resourceId('Microsoft.Resources/deployments', 'adPhase2')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('resetNicUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "hostName": {
                        "value": "[variables('escwaHostname')]"
                    },
                    "subnetRef": {
                        "value": "[variables('managementSubnetRef')]"
                    },
                    "dnsSettings": {
                        "value": "[variables('dnsSettings')]"
                    },
                    "ipAddress": {
                        "value": "[parameters('escwaNodeIp')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2019-09-01",
            "type": "Microsoft.Resources/deployments",
            "name": "joinDomainEscwa",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'resetEscwaNodeNic')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('joinDomainUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "hostName": {
                        "value": "[variables('escwaHostname')]"
                    },
                    "domainJoinProperties": {
                        "value": "[variables('domainJoinProperties')]"
                    },
                    "deployLinux": {
                        "value": "[parameters('deployLinux')]"
                    }
                }
            }
        },
        {
            "condition": "[parameters('deployFsDemo')]",
            "apiVersion": "2019-09-01",
            "type": "Microsoft.Resources/deployments",
            "name": "resetFsNodeNic",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'createFsNode')]",
                "[resourceId('Microsoft.Resources/deployments', 'adPhase2')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('resetNicUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "hostName": {
                        "value": "[variables('fsHostname')]"
                    },
                    "subnetRef": {
                        "value": "[variables('dataSubnetRef')]"
                    },
                    "dnsSettings": {
                        "value": "[variables('dnsSettings')]"
                    },
                    "ipAddress": {
                        "value": "[parameters('fsNodeIp')]"
                    }
                }
            }
        },
        {
            "condition": "[parameters('deployFsDemo')]",
            "apiVersion": "2019-09-01",
            "type": "Microsoft.Resources/deployments",
            "name": "joinDomainFs",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'resetFsNodeNic')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('joinDomainUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "hostName": {
                        "value": "[variables('fsHostname')]"
                    },
                    "domainJoinProperties": {
                        "value": "[variables('domainJoinProperties')]"
                    },
                    "deployLinux": {
                        "value": "[parameters('deployLinux')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2019-09-01",
            "type": "Microsoft.Resources/deployments",
            "name": "configureEscwaNode",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'joinDomainEscwa')]",
                "[resourceId('Microsoft.Cache/Redis', variables('redisCacheName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('escwaConfigureNodeUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "hostName": {
                        "value": "[variables('escwaHostname')]"
                    },
                    "domainDNSName": {
                        "value": "[parameters('domainDNSName')]"
                    },
                    "applicationUsername": {
                        "value": "[parameters('applicationUsername')]"
                    },
                    "applicationUserPassword": {
                        "value": "[parameters('applicationUserPassword')]"
                    },
                    "clusterPrefix": {
                        "value": "[variables('clusterPrefixLower')]"
                    },
                    "esInstanceCount": {
                        "value": "[parameters('esInstanceCount')]"
                    },
                    "deployFsDemo": {
                        "value": "[parameters('deployFsDemo')]"
                    },
                    "deployPacDemo": {
                        "value": "[parameters('deployPacDemo')]"
                    },
                    "deployLinux": {
                        "value": "[parameters('deployLinux')]"
                    },
                    "domainAdminUserName": {
                        "value": "[parameters('administratorUserName')]"
                    },
                    "domainAdminPassword": {
                        "value": "[parameters('administratorPassword')]"
                    }
                }
            }
        },
        {
            "condition": "[parameters('deployFsDemo')]",
            "apiVersion": "2019-09-01",
            "type": "Microsoft.Resources/deployments",
            "name": "configureFsNode",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'joinDomainFs')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('fsConfigureNodeUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "hostName": {
                        "value": "[variables('fsHostname')]"
                    },
                    "fsviewPassword": {
                        "value": "[parameters('fsviewPassword')]"
                    },
                    "fsPort": {
                        "value": "[parameters('fsPort')]"
                    },
                    "domainDNSName": {
                        "value": "[parameters('domainDNSName')]"
                    },
                    "applicationUsername": {
                        "value": "[parameters('applicationUsername')]"
                    },
                    "deployLinux": {
                        "value": "[parameters('deployLinux')]"
                    },
                    "domainAdminUserName": {
                        "value": "[parameters('administratorUserName')]"
                    },
                    "domainAdminPassword": {
                        "value": "[parameters('administratorPassword')]"
                    }
                }
            }
        },
        {
            "condition": "[variables('deployDatabase')]",
            "apiVersion": "2019-09-01",
            "type": "Microsoft.Resources/deployments",
            "name": "sqlPhase2",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', 'sqlPhase1')]",
                "[resourceId('Microsoft.Resources/deployments', 'adPhase2')]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('sqlPhase2TemplateUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "clusterPrefix": {
                        "value": "[variables('clusterPrefixLower')]"
                    },
                    "subnetRef": {
                        "value": "[variables('dataSubnetRef')]"
                    },
                    "ipAddresses": {
                        "value": "[parameters('sqlNodeIpArray')]"
                    },
                    "dnsSettings": {
                        "value": "[variables('dnsSettings')]"
                    },
                    "domainDNSName": {
                        "value": "[parameters('domainDNSName')]"
                    },
                    "domainAdminUserName": {
                        "value": "[parameters('administratorUserName')]"
                    },
                    "domainAdminPassword": {
                        "value": "[parameters('administratorPassword')]"
                    },
                    "applicationUsername": {
                        "value": "[parameters('applicationUsername')]"
                    },
                    "applicationUserPassword": {
                        "value": "[parameters('applicationUserPassword')]"
                    },
                    "sqlLBIPAddress": {
                        "value": "[parameters('sqlLBIPAddress')]"
                    },
                    "sqlLBName": {
                        "value": "[variables('sqlLBName')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2019-09-01",
            "type": "Microsoft.Resources/deployments",
            "name": "[esdeploy.getLoopName('configureEsNode', copyIndex())]",
            "dependsOn": [
                "joinDomainEsNodeLoop",
                "[resourceId('Microsoft.Resources/deployments', 'configureFsNode')]",
                "[resourceId('Microsoft.Resources/deployments', 'sqlPhase2')]",
                "[resourceId('Microsoft.Resources/deployments', 'configureEscwaNode')]"
            ],
            "copy": {
                "name": "configureEsNodeLoop",
                "count": "[parameters('esInstanceCount')]"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('esConfigureNodeUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "_artifactsLocation": {
                        "value": "[parameters('_artifactsLocation')]"
                    },
                    "_artifactsLocationSasToken": {
                        "value": "[parameters('_artifactsLocationSasToken')]"
                    },
                    "hostName": {
                        "value": "[esdeploy.getLoopName(variables('esHostname'), copyIndex())]"
                    },
                    "domainDNSName": {
                        "value": "[parameters('domainDNSName')]"
                    },
                    "applicationUsername": {
                        "value": "[parameters('applicationUsername')]"
                    },
                    "applicationUserPassword": {
                        "value": "[parameters('applicationUserPassword')]"
                    },
                    "deployDbDemo": {
                        "value": "[parameters('deployDbDemo')]"
                    },
                    "deployPacDemo": {
                        "value": "[parameters('deployPacDemo')]"
                    },
                    "deployFsDemo": {
                        "value": "[parameters('deployFsDemo')]"
                    },
                    "clusterPrefix": {
                        "value": "[variables('clusterPrefixLower')]"
                    },
                    "deployLinux": {
                        "value": "[parameters('deployLinux')]"
                    },
                    "redisPassword": {
                        "value": "[if(parameters('deployPacDemo'), listkeys(resourceId('Microsoft.Cache/redis', variables('redisCacheName')), '2019-07-01').primaryKey, 'dummyPass')]"
                    },
                    "domainAdminUserName": {
                        "value": "[parameters('administratorUserName')]"
                    },
                    "domainAdminPassword": {
                        "value": "[parameters('administratorPassword')]"
                    }
                }
            }
        }
    ],
    "functions": [{
        "namespace": "esdeploy",
        "members": {
          "getLoopName": {
            "parameters": [
              {
                "name": "base",
                "type": "string"
              },
              {
                  "name": "index",
                  "type": "int"
              }
            ],
            "output": {
              "type": "string",
              "value": "[concat(parameters('base'), padLeft(add(parameters('index'), 1), 2, '0'))]"
            }
          }
        }
      }
    ]
}