{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "metadata": {
                "description": "Region in which the resource group and components will be deployed"
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located including a trailing '/'"
            }
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
            }
        },
        "hostName": {
            "type": "string",
            "metadata": {
                "description": "Virtual machine name to be used."
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "metadata": {
                "description": "Host VM size"
            }
        },
        "dataDiskSize": {
            "type": "int",
            "metadata": {
                "description": "Size of Datadisk in GB for virtual machine."
            }
        },
        "diagStorageAccount": {
            "type": "string",
            "metadata": {
                "description": "Storage account name for boot diags"
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Administrator username on VM."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for administrator user."
            }
        },
        "subnetRef": {
            "type": "string",
            "metadata": {
                "description": "Reference for the subnet"
            }
        },
        "availabilitySetName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Reference for availability set"
            }
        },
        "esLicense": {
            "type": "string",
            "metadata": {
                "description": "Location of license key file for Enterprise Server."
            }
        },
        "deployLinux": {
            "type": "bool",
            "metadata": {
                "description": "Flag to determine whether linux VMs are deployed for ES."
            }
        },
        "sshKey": {
            "type": "string",
            "metadata": {
                "description": "SSH Public Key"
            }
        }
    },
    "variables": {
        "osDiskType": "StandardSSD_LRS",
        "singleQuote": "'",
        "dataDisks": [
            {
                "name": "[concat(parameters('hostName'), '-data-disk')]",
                "diskSizeGB": "[parameters('dataDiskSize')]",
                "lun": 0,
                "managedDisk": {
                    "storageAccountType": "Standard_LRS"
                },
                "createOption": "Empty"
            }
        ],
        "dataDisksEmpty": [],
        "availabilitySetRef": {
            "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
        },
        "sshKeyPath": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
        "osProfileWin": {
            "computerName": "[parameters('hostName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "windowsConfiguration": {
                "enableAutomaticUpdates": true,
                "provisionVmAgent": true
            }
        },
        "osProfileLinux": {
            "computerName": "[parameters('hostName')]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]",
            "linuxConfiguration": {
                "disablePasswordAuthentication": true,
                "ssh": {
                    "publicKeys": [{
                        "path": "[variables('sshKeyPath')]",
                        "keyData": "[parameters('sshKey')]"
                    }]
                }
            }
        }
    },
    "resources": [
        {
            "apiVersion": "2019-11-01",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('hostName'), '-nic')]",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [{
                    "name": "[concat(parameters('hostName'), 'ipconfig')]",
                    "properties": {
                        "privateIPAllocationMethod": "Dynamic",
                        "subnet": {
                            "id": "[parameters('subnetRef')]"
                        }
                    }
                }]
            }
        },
        {
            "apiVersion": "2019-12-01",
            "name": "[parameters('hostName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('hostName'), '-nic'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "availabilitySet": "[if(equals(parameters('availabilitySetName'), ''), json('null'), variables('availabilitySetRef'))]",
                "storageProfile": {
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "[if(parameters('deployLinux'), 'RedHat', 'MicrosoftWindowsServer')]",
                        "offer": "[if(parameters('deployLinux'), 'RHEL', 'WindowsServer')]",
                        "sku": "[if(parameters('deployLinux'), '7.5', '2019-Datacenter')]",
                        "version": "latest"
                    },
                    "dataDisks": "[if(equals(parameters('dataDiskSize'), 0), variables('dataDisksEmpty'), variables('dataDisks'))]"
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('hostName'), '-nic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat(concat(reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', parameters('diagStorageAccount')), '2019-06-01').primaryEndpoints['blob']))]"
                    }
                },
                "osProfile": "[if(parameters('deployLinux'), variables('osProfileLinux'), variables('osProfileWin'))]"
            }
        },
        {
            "apiVersion": "2019-12-01",
            "name": "[concat(parameters('hostName'), '/Setup')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "location": "[parameters('location')]",
            "condition": "[not(parameters('deployLinux'))]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('hostName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "forceUpdateTag": "v.1.0",
                "settings": {
                    "fileUris": [
                        "[uri(parameters('_artifactsLocation'), concat('scripts_win/Install-ES.ps1', parameters('_artifactsLocationSasToken')))]",
                        "[uri(parameters('_artifactsLocation'), concat('scripts_win/Prepare-Installer.exe', parameters('_artifactsLocationSasToken')))]",
                        "[uri(parameters('_artifactsLocation'), concat('scripts_win/azcopy.exe', parameters('_artifactsLocationSasToken')))]",
                        "[uri(parameters('_artifactsLocation'), concat('scripts_win/MFESDIAGS.cmd', parameters('_artifactsLocationSasToken')))]"
                    ]
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('powershell .\\Install-ES.ps1 -license ', variables('singleQuote'), '\"', parameters('esLicense'), '\"', variables('singleQuote'), if(equals(parameters('dataDiskSize'), 0), ' -mountDrive N', ''))]"
                }
            }
        },
        {
            "apiVersion": "2019-12-01",
            "name": "[concat(parameters('hostName'), '/SetupLinux')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "location": "[parameters('location')]",
            "condition": "[parameters('deployLinux')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('hostName'))]"
            ],
            "properties": {
              "publisher": "Microsoft.Azure.Extensions",
              "type": "CustomScript",
              "typeHandlerVersion": "2.0",
              "autoUpgradeMinorVersion": true,
              "settings": {
                "fileUris": [
                    "[uri(parameters('_artifactsLocation'), concat('scripts_unix/Install-ES.sh', parameters('_artifactsLocationSasToken')))]",
                    "[uri(parameters('_artifactsLocation'), concat('scripts_unix/Prepare-Installer', parameters('_artifactsLocationSasToken')))]",
                    "[uri(parameters('_artifactsLocation'), concat('scripts_unix/azcopy.tar.gz', parameters('_artifactsLocationSasToken')))]",
                    "[uri(parameters('_artifactsLocation'), concat('scripts_unix/mfesdiags.sh', parameters('_artifactsLocationSasToken')))]"
                ]
              },
              "protectedSettings": {
                 "commandToExecute": "[concat('bash ./Install-ES.sh \"', parameters('esLicense'), '\"', ' ', parameters('adminUsername'), if(equals(parameters('dataDiskSize'), 0), ' N', ' Y'))]"
              }
            }
          }
    ]
}