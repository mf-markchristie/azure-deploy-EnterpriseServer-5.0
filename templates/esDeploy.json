{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "apiVersionCompute": {
            "type": "string"
        },
        "apiVersionStorage": {
            "type": "string"
        },
        "apiVersionNetwork": {
            "type": "string"
        },
        "location": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Region in which the resource group and components will be deployed"
            }
        },
        "artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located including a trailing '/'"
            }
        },
        "artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
            }
        },
        "hostName": {
            "type": "string",
            "defaultValue": "VM-mfed",
            "minLength": 4,
            "maxLength": 20,
            "metadata": {
                "description": "Virtual machine name to be used."
            }
        },
        "virtualMachineSize": {
            "type": "string",
            "defaultValue": "Standard_DS2_v2",
            "metadata": {
                "description": "Host VM size"
            }
        },
        "dataDiskSize": {
            "type": "int",
            "defaultValue": 32,
            "metadata": {
                "description": "Size of Datadisk in GB for virtual machine."
            }
        },
        "diagStorageAccount": {
            "type": "string",
            "metadata": {
                "description": "Storage account name for boot diags"
            }
        },
        "adminUsername": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Administrator username on VM."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "minLength": 5,
            "metadata": {
                "description": "Password for administrator user."
            }
        },
        "subnetRef": {
            "type": "string",
            "metadata": {
                "description": "Reference for the subnet"
            }
        },
        "nsgName": {
            "type": "string",
            "metadata": {
                "description": "Name of network security group"
            }
        },
        "availabilitySetName": {
            "type": "string",
            "metadata": {
                "description": "Name of availability set"
            }
        },
        "esLicenseKey": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "License key for Enterprise Server."
            }
        }
    },
    "variables": {
        "osDiskType": "StandardSSD_LRS",
        "scriptFileUri": "[uri(parameters('artifactsLocation'), concat('scripts/Install-ES.ps1', parameters('artifactsLocationSasToken')))]"
    },
    "resources": [
        {
            "apiVersion": "[parameters('apiVersionNetwork')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(parameters('hostName'), '-nic')]",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [{
                    "name": "[concat(parameters('hostName'), 'ipconfig')]",
                    "properties": {
                        "privateIPAllocationMethod": "Dynamic",
                        "subnet": {
                            "id": "[parameters('subnetRef')]"
                        }
                    }
                }],
                "dnsSettings": {
                    "dnsServers": [],
                    "appliedDnsServers": []
                },
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('nsgName'))]"
                }
            }
        },
        {
            "apiVersion": "[parameters('apiVersionCompute')]",
            "name": "[parameters('hostName')]",
            "type": "Microsoft.Compute/virtualMachines",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('hostName'), '-nic'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',parameters('availabilitySetName'))]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "FromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('osDiskType')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2019-Datacenter",
                        "version": "latest"
                    },
                    "dataDisks": [
                        {
                            "name": "[concat(parameters('hostName'), '-data-disk')]",
                            "diskSizeGB": "[parameters('dataDiskSize')]",
                            "lun": 0,
                            "managedDisk": {
                                "storageAccountType": "Standard_LRS"
                            },
                            "createOption": "Empty"
                        }
                    ]
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('hostName'), '-nic'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat(concat(reference(resourceId(resourceGroup().name, 'Microsoft.Storage/storageAccounts', parameters('diagStorageAccount')), parameters('apiVersionStorage')).primaryEndpoints['blob']))]"
                    }
                },
                "osProfile": {
                    "computerName": "[parameters('hostName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "enableAutomaticUpdates": true,
                        "provisionVmAgent": true
                    }
                }
            }
        },
        {
            "apiVersion": "[parameters('apiVersionCompute')]",
            "name": "[concat(parameters('hostName'), '/Setup')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('hostName'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.9",
                "autoUpgradeMinorVersion": true,
                "forceUpdateTag": "v.1.0",
                "settings": {
                    "fileUris": [
                        "[variables('scriptFileUri')]"
                    ]
                },
                "protectedSettings": {
                    "commandToExecute": "[concat('powershell ./scripts/Install-ES.ps1', if(equals(parameters('esLicenseKey'), ''), '', concat(' -licenseKey ', parameters('esLicenseKey'))))]"
                }
            }
        }
    ]
}