{
    "$schema": "http: //schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "apiVersionCompute": {
            "type": "string"
        },
        "apiVersionStorage": {
            "type": "string"
        },
        "apiVersionNetwork": {
            "type": "string"
        },
        "location": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Region in which the resource group and components will be deployed"
            }
        },
        "artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located including a trailing '/'"
            }
        },
        "artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
            }
        },
        "clusterPrefix": {
            "type": "string",
            "defaultValue": "mfes",
            "minLength": 4,
            "maxLength": 20,
            "metadata": {
                "description": "Cluster prefix. Used to generate cluster hostnames. Maximum of 20 characters."
            }
        },
        "subnetRef": {
            "type": "string",
            "metadata": {
                "description": "Reference for the subnet"
            }
        },
        "ipAddresses": {
            "type": "array",
            "metadata": {
                "description": "List of ip addresses for SQL VMs"
            }
        },
        "domainJoinProperties": {
            "type": "object",
            "metadata": {
                "description": "Domain join properties object"
            }
        },
        "dnsSettings": {
            "type": "object",
            "metadata": {
                "description": "Dns configuration to apply"
            }
        }
    },
    "variables": {
        "witnessVMName": "[concat(parameters('clusterPrefix'), '-sqlw')]",
        "slaveVmName": "[concat(parameters('clusterPrefix'), '-sqls')]",
        "sqlLBName": "sqlLoadBalancer"
    },
    "resources": [
        {
            "apiVersion": "[parameters('apiVersionNetwork')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('witnessVMName'), '-nic')]",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [{
                    "name": "[concat(variables('witnessVMName'), 'ipconfig')]",
                    "properties": {
                        "privateIPAllocationMethod": "Static",
                        "privateIPAddress":  "[parameters('ipAddresses')[2]]",
                        "subnet": {
                            "id": "[parameters('subnetRef')]"
                        }
                    }
                }],
                "dnsSettings": "[parameters('dnsSettings')]"
            }
        },
        {
            "apiVersion": "[parameters('apiVersionNetwork')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('slaveVmName'), copyIndex(), '-nic')]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "resetSlaveNicLoop",
                "count": 2
            },
            "properties": {
                "ipConfigurations": [{
                    "name": "[concat(variables('slaveVmName'), copyIndex(), 'ipconfig')]",
                    "properties": {
                        "privateIPAllocationMethod": "Static",
                        "privateIPAddress":  "[parameters('ipAddresses')[copyIndex()]]",
                        "subnet": {
                            "id": "[parameters('subnetRef')]"
                        },
                        "loadBalancerBackendAddressPools": [
                            {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('sqlLBName')), '/backendAddressPools/sqlLBBE')]"
                            }
                        ]
                    }
                }],
                "dnsSettings": "[parameters('dnsSettings')]"
            }
        }
    ]
}