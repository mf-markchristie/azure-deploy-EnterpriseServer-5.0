{
    "$schema": "http: //schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "apiVersionCompute": {
            "type": "string"
        },
        "apiVersionStorage": {
            "type": "string"
        },
        "apiVersionNetwork": {
            "type": "string"
        },
        "location": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Region in which the resource group and components will be deployed"
            }
        },
        "_artifactsLocation": {
            "type": "string",
            "metadata": {
                "description": "The base URI where artifacts required by this template are located including a trailing '/'"
            }
        },
        "_artifactsLocationSasToken": {
            "type": "securestring",
            "metadata": {
                "description": "The sasToken required to access _artifactsLocation.  When the template is deployed using the accompanying scripts, a sasToken will be automatically generated. Use the defaultValue if the staging location is not secured."
            }
        },
        "clusterPrefix": {
            "type": "string",
            "defaultValue": "mfes",
            "minLength": 4,
            "maxLength": 20,
            "metadata": {
                "description": "Cluster prefix. Used to generate cluster hostnames. Maximum of 20 characters."
            }
        },
        "subnetRef": {
            "type": "string",
            "metadata": {
                "description": "Reference for the subnet"
            }
        },
        "ipAddresses": {
            "type": "array",
            "metadata": {
                "description": "List of ip addresses for SQL VMs"
            }
        },
        "domainJoinProperties": {
            "type": "object",
            "metadata": {
                "description": "Domain join properties object"
            }
        },
        "dnsSettings": {
            "type": "object",
            "metadata": {
                "description": "Dns configuration to apply"
            }
        },
        "domainDNSName": {
            "type": "string",
            "metadata": {
                "description": "The fully qualified domain name (FQDN), e.g., example.com. Must be 2-255 characters."
            }
        },
        "domainAdminUserName": {
            "type": "string",
            "metadata": {
                "description": "Domain administrator username."
            }
        },
        "domainAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The password for the domain Admin account."
            }
        },
        "applicationUsername": {
            "type": "string",
            "minLength": 1,
            "metadata": {
                "description": "Administrator username for service account user."
            }
        },
        "applicationUserPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for service account user."
            }
        },
        "sqlLBIPAddress": {
            "type": "string",
            "metadata": {
                "description": "Ip address for SQL Load Balancer"
            }
        },
        "deployDbDemo": {
            "type": "bool",
            "metadata": {
                "description": "Flag to determine whether database demo is deployed"
            }
        },
        "sqlLBName": {
            "type": "string",
            "metadata": {
                "description": "Name for SQL Load Balancer"
            }
        }
    },
    "variables": {
        "witnessVMName": "[concat(parameters('clusterPrefix'), '-sqlw')]",
        "slaveVmName": "[concat(parameters('clusterPrefix'), '-sqls')]",
        "adPDCVMName": "[concat(parameters('clusterPrefix'), '-adP')]",
        "scriptLocation": "[uri(parameters('_artifactsLocation'), concat('scripts/BankDemoCreateAll.SQL', parameters('_artifactsLocationSasToken')))]",
        "fswModulesURL": "[uri(parameters('_artifactsLocation'), concat('DSC/CreateFileShareWitness.ps1.zip', parameters('_artifactsLocationSasToken')))]",
        "fswConfigurationFunction": "CreateFileShareWitness.ps1\\CreateFileShareWitness",
        "sqlAOPrepareModulesURL": "[uri(parameters('_artifactsLocation'), concat('DSC/PrepareAlwaysOnSqlServer.ps1.zip', parameters('_artifactsLocationSasToken')))]",
        "sqlAOPrepareConfigurationFunction": "PrepareAlwaysOnSqlServer.ps1\\PrepareAlwaysOnSqlServer",
        "createClusterModulesURL": "[uri(parameters('_artifactsLocation'), concat('DSC/CreateFailoverCluster.ps1.zip', parameters('_artifactsLocationSasToken')))]",
        "createClusterConfigurationFunction": "CreateFailoverCluster.ps1\\CreateFailoverCluster",
        "sharePath": "sqlha-fsw",
        "sqlAOEPName": "sqlha-hadr",
        "clusterName": "sqlha-fc"
    },
    "resources": [
        {
            "apiVersion": "[parameters('apiVersionNetwork')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('witnessVMName'), '-nic')]",
            "location": "[parameters('location')]",
            "properties": {
                "ipConfigurations": [{
                    "name": "[concat(variables('witnessVMName'), '-ipconfig')]",
                    "properties": {
                        "privateIPAllocationMethod": "Static",
                        "privateIPAddress":  "[parameters('ipAddresses')[2]]",
                        "subnet": {
                            "id": "[parameters('subnetRef')]"
                        }
                    }
                }],
                "dnsSettings": "[parameters('dnsSettings')]"
            }
        },
        {
            "apiVersion": "[parameters('apiVersionNetwork')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('slaveVmName'), copyIndex(), '-nic')]",
            "location": "[parameters('location')]",
            "copy": {
                "name": "resetSlaveNicLoop",
                "count": 2
            },
            "properties": {
                "ipConfigurations": [{
                    "name": "[concat(variables('slaveVmName'), copyIndex(), '-ipconfig')]",
                    "properties": {
                        "privateIPAllocationMethod": "Static",
                        "privateIPAddress":  "[parameters('ipAddresses')[copyIndex()]]",
                        "subnet": {
                            "id": "[parameters('subnetRef')]"
                        },
                        "loadBalancerBackendAddressPools": [
                            {
                                "id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('sqlLBName')), '/backendAddressPools/sqlLBBE')]"
                            }
                        ]
                    }
                }],
                "dnsSettings": "[parameters('dnsSettings')]"
            }
        },
        {
            "apiVersion": "[parameters('apiVersionCompute')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('witnessVMName'),'/CreateFileShareWitness')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('witnessVMName'), '-nic'))]"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.71",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "modulesURL": "[variables('fswModulesURL')]",
                    "configurationFunction": "[variables('fswConfigurationFunction')]",
                    "properties": {
                        "domainName": "[parameters('domainDNSName')]",
                        "SharePath": "[variables('sharePath')]",
                        "adminCreds": {
                            "userName": "[parameters('domainAdminUserName')]",
                            "password": "privateSettingsRef:adminPassword"
                        }
                    }
                },
                "protectedSettings": {
                    "items": {
                        "adminPassword": "[parameters('domainAdminPassword')]"
                    }
                }
            }
        },
        {
            "apiVersion": "[parameters('apiVersionCompute')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('slaveVmName'), copyIndex(), '/SqlVmIaasExtension')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "resetSlaveNicLoop"
            ],
            "copy": {
                "name": "slaveIaasLoop",
                "count": 2
            },
            "properties": {
                "type": "SqlIaaSAgent",
                "publisher": "Microsoft.SqlServer.Management",
                "typeHandlerVersion": "1.2",
                "autoUpgradeMinorVersion": "true",
                "settings": {
                    "AutoTelemetrySettings": {
                        "Region": "[parameters('location')]"
                    },
                    "AutoPatchingSettings": {
                        "PatchCategory": "WindowsMandatoryUpdates",
                        "Enable": true,
                        "DayOfWeek": "Sunday",
                        "MaintenanceWindowStartingHour": 2,
                        "MaintenanceWindowDuration": "60"
                    },
                    "AutoBackupSettings": {
                        "Enable": false,
                        "RetentionPeriod": "30",
                        "EnableEncryption": false
                    }
                }
            }
        },
        {
            "apiVersion": "[parameters('apiVersionCompute')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('slaveVmName'),'0/sqlAOPrepare')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', variables('witnessVMName'), 'CreateFileShareWitness')]",
                "slaveIaasLoop"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.71",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "modulesURL": "[variables('sqlAOPrepareModulesURL')]",
                    "configurationFunction": "[variables('sqlAOPrepareConfigurationFunction')]",
                    "properties": {
                        "domainName": "[parameters('domainDNSName')]",
                        "sqlAlwaysOnEndpointName": "[variables('sqlAOEPName')]",
                        "adminCreds": {
                            "userName": "[parameters('domainAdminUserName')]",
                            "password": "privateSettingsRef:AdminPassword"
                        },
                        "sqlServiceCreds": {
                            "userName": "[parameters('applicationUser')]",
                            "password": "privateSettingsRef:SqlServerServiceAccountPassword"
                        },
                        "NumberOfDisks": "2",
                        "WorkloadType": "GENERAL"
                    }
                },
                "protectedSettings": {
                    "items": {
                        "adminPassword": "[parameters('domainAdminPassword')]",
                        "sqlServerServiceAccountPassword": "[parameters('applicationUserPassword')]"
                    }
                }
            }
        },
        {
            "apiVersion": "[parameters('apiVersionCompute')]",
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(variables('slaveVmName'),'1/configuringAlwaysOn')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/extensions', concat(variables('slaveVmName'), '0'), 'sqlAOPrepare')]",
                "slaveIaasLoop"
            ],
            "properties": {
                "publisher": "Microsoft.Powershell",
                "type": "DSC",
                "typeHandlerVersion": "2.71",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "modulesURL": "[variables('createClusterModulesURL')]",
                    "configurationFunction": "[variables('createClusterConfigurationFunction')]",
                    "properties": {
                        "domainName": "[parameters('domainDNSName')]",
                        "clusterName": "[variables('clusterName')]",
                        "sharePath": "[concat('\\\\', variables('witnessVMName'), '\\', variables('sharePath'))]",
                        "nodes": [
                            "[concat(variables('slaveVmName'), '0')]",
                            "[concat(variables('slaveVmName'), '1')]"
                        ],
                        "sqlAlwaysOnEndpointName": "[variables('sqlAOEPName')]",
                        "scriptLocation": "[variables('scriptLocation')]",
                        "sqlAlwaysOnAvailabilityGroupName": "alwayson-ag",
                        "sqlAlwaysOnAvailabilityGroupListenerName": "alwayson-ag-listener",
                        "SqlAlwaysOnAvailabilityGroupListenerPort": "1433",
                        "databaseNames": "AutoHa-sample",
                        "lbName": "[parameters('sqlLBName')]",
                        "lbAddress": "[parameters('sqlLBIPAddress')]",
                        "primaryReplica": "[concat(variables('slaveVmName'),'1')]",
                        "secondaryReplica": "[concat(variables('slaveVmName'),'0')]",
                        "dnsServerName": "[variables('adPDCVMName')]",
                        "adminCreds": {
                            "userName": "[parameters('domainAdminUserName')]",
                            "password": "privateSettingsRef:adminPassword"
                        },
                        "sqlServiceCreds": {
                            "userName": "[parameters('applicationUser')]",
                            "password": "privateSettingsRef:sqlServerServiceAccountPassword"
                        },
                        "SQLAuthCreds": {
                            "userName": "sqlsa",
                            "password": "privateSettingsRef:sqlAuthPassword"
                        },
                        "NumberOfDisks": "2",
                        "WorkloadType": "GENERAL"
                    }
                },
                "protectedSettings": {
                    "items": {
                        "adminPassword": "[parameters('domainAdminPassword')]",
                        "sqlServerServiceAccountPassword": "[parameters('applicationUserPassword')]",
                        "sqlAuthPassword": "[parameters('applicationUserPassword')]"
                    }
                }
            }
        }
    ]
}